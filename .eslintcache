[{"D:\\work\\react-todo-app\\src\\index.js":"1","D:\\work\\react-todo-app\\src\\App.js":"2","D:\\work\\react-todo-app\\src\\reportWebVitals.js":"3","D:\\work\\react-todo-app\\src\\components\\Form.js":"4","D:\\work\\react-todo-app\\src\\components\\TodoList.js":"5","D:\\work\\react-todo-app\\src\\components\\Todo.js":"6"},{"size":176,"mtime":1609654935616,"results":"7","hashOfConfig":"8"},{"size":1858,"mtime":1609623913271,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1176,"mtime":1609622348128,"results":"11","hashOfConfig":"8"},{"size":443,"mtime":1609622695363,"results":"12","hashOfConfig":"8"},{"size":943,"mtime":1609620707854,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18mhb68",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"D:\\work\\react-todo-app\\src\\index.js",[],"D:\\work\\react-todo-app\\src\\App.js",["28"],"import React from \"react\";\nimport './App.css';\n//Importing components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //Functions\n  const filterHandler = () => {\n    switch(status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  //Runs only once when app is started or refreshed\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  //Runs everytime todos or status gets updated\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //Save to local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  //Get todos from local storage\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>The TODO List</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n        />\n    </div>\n  );\n}\n\nexport default App;\n",["29","30"],"D:\\work\\react-todo-app\\src\\reportWebVitals.js",[],"D:\\work\\react-todo-app\\src\\components\\Form.js",[],"D:\\work\\react-todo-app\\src\\components\\TodoList.js",[],"D:\\work\\react-todo-app\\src\\components\\Todo.js",[],{"ruleId":"31","severity":1,"message":"32","line":39,"column":6,"nodeType":"33","endLine":39,"endColumn":21,"suggestions":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["39"],"no-native-reassign",["40"],"no-negated-in-lhs",["41"],{"desc":"42","fix":"43"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"44","text":"45"},[1015,1030],"[todos, status, filterHandler, saveLocalTodos]"]